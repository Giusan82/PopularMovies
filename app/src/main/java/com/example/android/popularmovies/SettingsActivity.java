package com.example.android.popularmovies;

import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.v4.app.NavUtils;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.preference.ListPreference;
import android.support.v7.preference.Preference;
import android.support.v7.preference.PreferenceFragmentCompat;
import android.support.v7.preference.PreferenceGroup;
import android.support.v7.preference.PreferenceScreen;
import android.support.v7.preference.SwitchPreferenceCompat;
import android.view.MenuItem;

import com.example.android.popularmovies.utilities.JsonParser;
import com.example.android.popularmovies.utilities.MoviesData;

import java.util.ArrayList;
import java.util.List;

public class SettingsActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.settings_activity);
        //Show the back arrow
        ActionBar actionBar = this.getSupportActionBar();
        if (actionBar != null) {
            actionBar.setDisplayHomeAsUpEnabled(true);
        }
    }

    //Go back in the previous activity without reloading
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == android.R.id.home) {
            NavUtils.navigateUpFromSameTask(this);
        }
        return super.onOptionsItemSelected(item);
    }

    public static class ResultsPreferenceFragment extends PreferenceFragmentCompat implements SharedPreferences.OnSharedPreferenceChangeListener {
        SharedPreferences sharedPreferences;


        @Override
        public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
            addPreferencesFromResource(R.xml.settings_main);
            sharedPreferences = getPreferenceScreen().getSharedPreferences();
            PreferenceScreen prefScreen = getPreferenceScreen();
            //these ListPreference is filled taking data from an List<MoviesData> generated by a Json. Source: https://stackoverflow.com/a/6137076
            ListPreference language_list_pref = (ListPreference) findPreference(getString(R.string.settings_language_key));
            if (language_list_pref != null) {
                List<MoviesData> languageList = JsonParser.parsingLanguageList(getContext(), getString(R.string.languages_list_json));
                String entries[] = new String[languageList.size()];
                String entryValues[] = new String[languageList.size()];
                int i = 0;
                for (MoviesData language : languageList) {
                    String language_label = language.getLanguageEnglishName();
                    entries[i] = language_label;
                    entryValues[i] = language.getLanguageCode();
                    i++;
                }
                language_list_pref.setEntries(entries);
                language_list_pref.setEntryValues(entryValues);
            }

            ListPreference genre_list_pref = (ListPreference) findPreference(getString(R.string.settings_genre_ids_key));
            if (genre_list_pref != null) {
                List<MoviesData> genreList = JsonParser.parsingGenreList(getContext(), getString(R.string.movies_genre_ids_json), getString(R.string.tv_genre_ids_json));

                ArrayList<String> entries = new ArrayList<>();
                ArrayList<String> entryValues = new ArrayList<>();
                entries.add(getString(R.string.settings_any_genres_label));
                entryValues.add(getString(R.string.settings_any_genres_value));
                for (MoviesData genre : genreList) {

                    entries.add(genre.getGenreName());
                    entryValues.add(genre.getGenreID());
                }
                genre_list_pref.setEntries(entries.toArray(new String[genreList.size()]));
                genre_list_pref.setEntryValues(entryValues.toArray(new String[genreList.size()]));
            }

            ListPreference original_lang_list_pref = (ListPreference) findPreference(getString(R.string.settings_original_language_key));
            if (original_lang_list_pref != null) {
                List<MoviesData> original_langList = JsonParser.parsingLanguageList(getContext(), getString(R.string.languages_list_json));

                ArrayList<String> entries = new ArrayList<>();
                ArrayList<String> entryValues = new ArrayList<>();
                entries.add(getString(R.string.settings_any_original_language_label));
                entryValues.add(getString(R.string.settings_any_original_language_value));
                for (MoviesData original_lang : original_langList) {

                    entries.add(original_lang.getLanguageEnglishName());
                    entryValues.add(original_lang.getLanguageCode());
                }
                original_lang_list_pref.setEntries(entries.toArray(new String[original_langList.size()]));
                original_lang_list_pref.setEntryValues(entryValues.toArray(new String[original_langList.size()]));
            }

            refreshSummary(prefScreen);
        }

        //this update the listpreferences summary when the setting activity is launched
        private void refreshSummary(PreferenceGroup prefGroup) {
            int count = prefGroup.getPreferenceCount();
            for (int i = 0; i < count; i++) {
                Preference p = prefGroup.getPreference(i);
                if (p instanceof PreferenceGroup) {
                    refreshSummary((PreferenceGroup) p);
                } else if (!(p instanceof SwitchPreferenceCompat)) {
                    String value = sharedPreferences.getString(p.getKey(), "");
                    setPreferenceSummary(p, value);
                }
            }
        }

        //This method checks if the preference is a ListPreference, if so, this set the summary
        private void setPreferenceSummary(Preference preference, String value) {
            if (preference instanceof ListPreference) {
                ListPreference listPreference = (ListPreference) preference;
                int prefIndex = listPreference.findIndexOfValue(value);
                if (prefIndex >= 0) {
                    listPreference.setSummary(listPreference.getEntries()[prefIndex]);
                }
            }
        }

        //Called when a shared preference is changed.
        @Override
        public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
            Preference preference = findPreference(key);
            if (null != preference) {
                if (!(preference instanceof SwitchPreferenceCompat)) {
                    String value = sharedPreferences.getString(preference.getKey(), "");
                    setPreferenceSummary(preference, value);
                }
            }
        }

        //Registers a callback to be invoked when a change happens to a preference.
        @Override
        public void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
        }

        //Unregisters a previous callback.
        @Override
        public void onDestroy() {
            super.onDestroy();
            getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);
        }
    }
}